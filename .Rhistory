}
# plot(aa.coords.reduced, bb.coords.reduced) ## The reduced set of points fall on the boundary of the confidence envelope
# ## Now, calculate model-predicted probabilities of infection for each dose, using each pair of (alpha, beta) values in aa.coords.reduced, and bb.coords.reduced
wrapper = function(AA, BB){
p.inf.mixture(Doses = dd, alpha.in = AA, beta.in = BB, pP.in = pP)
}
yy.CIs = mapply(FUN = wrapper, AA = aa.coords.reduced, BB = bb.coords.reduced)
#### Define CI envelope for plotting as the highest and lowest y value resulting from estimates using all sampled points from the CI envelope
yy.low = apply(X = yy.CIs, MARGIN = 1, FUN = min) # Estimates correspond to doses in dd
yy.high = apply(X = yy.CIs, MARGIN = 1, FUN = max)
polygon(x = c(dd, rev(dd)),
y = c(yy.low, rev(yy.high)),
col = tns.col(cols[3], 20), border = NA)
bounds[,4] = dd[c(1, min(which(yy.mixture.plot > 0.975)))]; #c(dd[min(1, which.max(yy.high <0.1))], 1e11)
#Conjunctval
p.inf.c =  p.inf(dd, opt.pc.conjunctival.skin$par); p.inf.c[which(!is.finite(p.inf.c))] = 1
lines(dd, p.inf.c, col = cols[4], lwd = 3)
lower =  p.inf(dd, CI.conjunctival[1]); lower[which(!is.finite(lower))] = 1
upper =  p.inf(dd, CI.conjunctival[2]); upper[which(!is.finite(upper))] = 1
polygon(x = c(dd, rev(dd)), y = c(lower, rev(upper)), border = NA, col = col2alpha(cols[4], .5))
bounds[,3] = dd[c(max(which(p.inf.c < 0.1)), min(which(p.inf.c > 0.975)))]
## IP inoculation
p.IP =  p.inf.IP(dose = dd, pP.in = pP); p.IP[which(!is.finite(p.IP))] = 1
lines(dd, p.IP, lwd = 1)
lower =  p.inf.IP(dose = dd, pP.in = CI.pP[1])
upper =  p.inf.IP(dose = dd, pP.in = CI.pP[2])
polygon(x = c(dd, rev(dd)), y = c(lower, rev(upper)), border = NA, col = col2alpha('black', .5))
bounds[,5] = dd[c(1, min(which(p.IP > 0.975)))]
#cols = c('firebrick1', 'deepskyblue', 'chocolate1', 'limegreen', 'darkgreen')
ys = seq(1.03, 1.27, length = 5)+.05
segments(x0 = bounds[1,], x1 = bounds[2,], y0 = ys, col = c(cols[c(1,2,4,3)], 'black'), lty = 2)
arrows(x0 = bounds[2,], x1 = 1e11, y0 = ys, col = c(cols[c(1,2,4,3)], 'black'), lty = 1, length = .1)
segments(x0 = bounds[1,], y0 = ys, y1 = ys+.02, col = c(cols[c(1,2,4,3)], 'black'))
segments(x0 = bounds[2,], y0 = ys, y1 = ys+.02, col = c(cols[c(1,2,4,3)], 'black'))
legend(4e9, y = .6, (c('intact', 'shaved', 'conjunctival', 'abraded', 'IP, no barrier')), col = rev(c('black', cols[c(3,4,2,1)])), fill = rev(c('black', cols[c(3,4,2,1)])), cex = .8, border = NA, lty = rev(c(1, 4, 1, 2, 3)), xpd = NA, lwd = rev(c(1,1,2,2,2,2)), bty = 'n')
legend(1e3, y = 1.67, c('infection probable at this dose', 'infection almost certain at this dose'), lty = c(2, 1), cex = .8, xpd = NA, bty = 'n')
text(.1, 1.3, 'A', font = 2, xpd = NA)
#### Repeat for rats
p.inf.a =  p.inf(dd, opt.pc.abraded.skin.rat$par, pP.in = pP.rat); p.inf.a[which(!is.finite(p.inf.a))] = 1
plot(dd, p.inf.a, ylab = 'P(Infection), rats', xlab = 'Dose', type = 'l', col = cols[3], ylim = c(0,1.3), log = 'x', cex.lab = 1.1, lwd = 3, bty= 'n', yaxt = 'n', xaxt = 'n', lty = 4)
axis(1, at = 10^(1:9), labels = 10^(1:9))
lower = p.inf(dd, CI.abraded.rat[1]); lower[which(!is.finite(lower))] = 1
upper = p.inf(dd, CI.abraded.rat[2]); upper[which(!is.finite(upper))] = 1
polygon(x = c(dd, rev(dd)), y = c(lower, rev(upper)), border = NA, col = col2alpha(cols[3], .5))
axis(side = 2, at = seq(0, 1, by = .1))
## Initialize storage and calculate bounds -- doses at which infection becomes possible, or certain
bounds = matrix(NA, nrow = 2, ncol = 2, dimnames = list(c('min', 'always'), c('abraded', 'IP')))
bounds[,1] = dd[c(max(which(p.inf.a < 0.1)), min(which(p.inf.a > 0.975)))]
## IP inoculation
p.IP =  p.inf.IP(dose = dd, pP.in = pP.rat); p.IP[which(!is.finite(p.IP))] = 1
lines(dd, p.IP, lwd = 1)
lower =  p.inf.IP(dose = dd, pP.in = CI.pP.rat[1])
upper =  p.inf.IP(dose = dd, pP.in = CI.pP.rat[2])
polygon(x = c(dd, rev(dd)), y = c(lower, rev(upper)), border = NA, col = col2alpha('black', .5))
bounds[,2] = dd[c(1, min(which(p.IP > 0.975)))]
#cols = c('firebrick1', 'deepskyblue', 'chocolate1', 'limegreen', 'darkgreen')
ys = seq(1.05, 1.25, length = 4)+.05
ys = ys[1:2]
segments(x0 = bounds[1,], x1 = bounds[2,], y0 = ys, col = c(cols[3], 'black'), lty = 2, xpd = NA)
arrows(x0 = bounds[2,], x1 = 1e11, y0 = ys, col = c(cols[3], 'black'), lty = 1, length = .1, xpd = NA)
segments(x0 = bounds[1,], y0 = ys, y1 = ys+.02, col = c(cols[3], 'black'),xpd = NA)
segments(x0 = bounds[2,], y0 = ys, y1 = ys+.02, col = c(cols[3], 'black'),xpd = NA)
legend(4e9, y = .6, (c('abraded', 'IP, no barrier')), col = rev(c('black', cols[3])), fill = rev(c('black', cols[3])), cex = .8, border = NA, lty = (c(4,1)), xpd = NA, lwd = rev(c(1,3)), bty = 'n')
legend(1e3, y = 1.5, c('infection probable at this dose', 'infection almost certain at this dose'), lty = c(2, 1), cex = .8, xpd = NA, bty = 'n')
text(.1, 1.3, 'B', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 33, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 550, 'D', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 33, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 600, 'D', font = 2, xpd = NA)
dev.off()
}
text(x = -.3, 650, 'D', font = 2, xpd = NA)
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 33, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 650, 'D', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 33, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 630, 'D', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 35, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 630, 'D', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 37, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 630, 'D', font = 2, xpd = NA)
dev.off()
}
####################################################################
###########################   SECTION 4   ##########################
####
####   4. Plot results!
####
####################################################################
####################################################################
## Plot point estimates and CIs of each free paramter, as well as estimated Beta ditribution of pc values
{
pdf(fig2)
par(mfrow = c(2,1), mgp = c(2, 1, 0), mar = c(3,3,2,3))
## Plot1 - point estimates and CIs ----------
xtext = c(-1.9, -8.5, -7.1, -5.4)
ytext = c(1.001, 1.001, 1.001, 1.001)+.0005
#cols = c('firebrick1', 'deepskyblue', 'limegreen', 'chocolate1')
labs = c(expression('p'['C(abraded)']), expression('p'['C(intact)']), expression('p'['C(shaved)']), expression('p'['C(conjunctival)']))
ests = c(opt.pc.abraded.skin$par, opt.pc.intact.skin$par, opt.pc.shaved.skin$par, opt.pc.conjunctival.skin$par)
plot(log10(ests[2]), 1, col = cols[2], xlim = c(-10, 0), ylim = c(.99, 1.01), pch = 16, yaxt = 'n', ylab = '', xlab = 'parameter value (log10 scale)', main = 'Basic model, pC and pP point estimates', xaxt = 'n')
axis(1, at = -10:0, labels = 10^(-10:0))
lines(log10(c(CI.intact[1], CI.intact[2])), c(1,1), col = cols[2], lwd = 1.5)
text(xtext[2], ytext[2], labs[2], col = cols[2], cex = 1)
CI.lows = c(CI.abraded[1], CI.intact[1], CI.shaved[1], CI.conjunctival[1])
CI.highs = c(CI.abraded[2], CI.intact[2], CI.shaved[2], CI.conjunctival[2])
for(ii in c(1, 3, 4)){
points(log10(ests[ii]), 1, col = cols[ii], pch = 16)
lines(log10(c(CI.lows[ii], CI.highs[ii])), c(1,1), col = cols[ii], lwd = 1.5)
text(xtext[ii], ytext[ii], labs[ii], col = cols[ii], cex = 1)
}
# Add Rat estimates
points(log10(opt.pc.abraded.skin.rat$par), .999, col = cols[1])
lines(log10(CI.pP.rat), c(.999, .999), col = cols[1])
# Add pP estimates
#hamsters
points(log10(pP), 1, col = 'black', pch = 16)
lines(log10(CI.pP), c(1,1), col = 'black')
text(log10(pP)+.1, 1.0015, expression('p'['P']), cex = 1, col = 'black')
#rat CIs
points(log10(pP.opt.rat$par), .998, col = 'black')
lines(log10(CI.pP.rat), c(.998, .998), col = 'black')
legend('topleft', c('hamsters', 'rats'), pch = c(16, 1), bty = 'n')
mtext(3, text = 'A', at = -11, line = 1, font = 2, xpd = NA)
xlims = par('usr')[1:2]
## Plot2 - distribution of pc values ----------
hamcol = 'darkred'
ratcol = 'lightpink3'
xx = c(10^(-10:-2), seq(.01,1, by = .01))
plot(log10(xx), (pbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, type = 'b', cex = .7, xlab = 'pC (log10 scale)', ylab = 'cumulative density', xaxt = 'n', main = 'Mixture model, estimated pC density', col = hamcol, pch = 16)
lines(log10(xx), pbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB']), col = ratcol, pch = 1, lty = 2, type = 'b', cex = .7)
axis(1, at = log10(10^(-10:0)), labels = 10^(-10:0))
mtext(3, text = 'B', at = -11, line = 1, font = 2, xpd = NA)
legend('bottomright', legend = c('hamsters', 'rats'), lty = c(1,2), pch =c(16,1), col = c(hamcol, ratcol), cex = .8)
## Add inset
par(fig = c(0.09+.02,0.4+.02, 0.18, .47), new = T)
xx = seq(0, 1, by = 0.001)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin$par['aa'], shape2 = opt.aa.BB.abraded.skin$par['BB'])), lty = 1, col = hamcol, pch = 16, type = 'b', cex = .7, ylab = 'density', xlab = '')
text(x = -.3, 36, 'C', font = 2, xpd = NA)
par(fig = c(0.09+.25,0.4+.25, 0.18, .47), new = T)
plot((xx), (dbeta(xx, shape1 = opt.aa.BB.abraded.skin.rat$par['aa'], shape2 = opt.aa.BB.abraded.skin.rat$par['BB'])), lty = 2, col = ratcol, pch = 1, type = 'b', cex = .7, ylab = '', xlab = '')
text(x = -.3, 630, 'D', font = 2, xpd = NA)
dev.off()
}
opt.pc.abraded.skin.rat
opt.aa.BB.abraded.skin.rat$value
aa = opt.aa.BB.abraded.skin.rat$par[1]
bb = opt.aa.BB.abraded.skin.rat$par[2]
aa
bb
aa/(aa+bb)
aa = round(aa, 2)
bb = round(bb, 2)
aa
bb
aa/(aa+bb)
ln(10^-20)/ln(1-.19)
log(10^-20)/log(1-.19)
log(10^-20)/log(1-.07)
pP
pP.rat
